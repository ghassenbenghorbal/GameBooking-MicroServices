version: '3'
services:
  #Nginx Service
  api-gateway:
    image: nginx:alpine
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
     - ../nginx/nginx.conf:/etc/nginx/nginx.conf
     - ../nginx/oauth2.js:/etc/nginx/oauth2.js
     - ../nginx/logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - auth
      - game
      - ticket
      
  #Auth Service
  auth:
    build:
      context: ../auth
      dockerfile: ../auth/Dockerfile
    image: auth-image
    container_name: auth-container
    ports:
      - "8081:8081"
    volumes:
     - ../auth:/app
    networks:
      - app-network
    depends_on:
      - db

  #Match Service
  game:
    build:
      context: ../game
      dockerfile: ../game/Dockerfile
    image: game-image
    container_name: game-container
    ports:
      - "8082:8082"
    volumes:
     - ../game:/app
    networks:
      - app-network
    depends_on:
      - db
      
  #Ticket Service
  ticket:
    build:
      context: ../ticket
      dockerfile: ../ticket/Dockerfile
    image: ticket-image
    container_name: ticket-container
    ports:
      - "8083:8083"
    volumes:
     - ../ticket:/app
    networks:
      - app-network
    depends_on:
      - db

#MySQL Service
  db:
    image: mysql:5.7
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: sports
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ../mysql/dbdata:/var/lib/mysql
      # - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
#Docker Networks
networks:
  app-network:
#Volumes
volumes:
  dbdata:
    driver: local